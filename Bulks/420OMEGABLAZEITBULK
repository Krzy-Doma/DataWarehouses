import random
import datetime
import string

#! 
def CarGenerateLicensePlate():
    letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    l1 = str(random.choice(letters))
    l2 = str(random.choice(letters))
    l3 = str(random.choice(letters))
    n1 = str(random.randint(0, 9))
    n2 = str(random.randint(0, 9))
    n3 = str(random.randint(0, 9))
    n4 = str(random.randint(0, 9))
    platenumber = l1 + l2 + l3 + n1 + n2 + n3 + n4

    return platenumber

def CarGenerateBrand():
    brandsList = ['Mercedes', 'Audi', 'Skoda', 'BMW', 'Citroen', 'Dacia', 'Fiat', 'Opel']
    brand = random.choice(brandsList)

    return brand

def CarGenerateModel(carBrand):
    mercedesModels = ['A', 'E', 'EQA', 'B', 'C', 'EQC', 'GLE', 'GLS', 'Marco Polo', 'S']
    audiModels = ['A1', 'A3', 'A4', 'A6', 'A7', 'A5', 'Q3', 'Q5', 'Q7', 'R8']
    skodaModels = ['SuperB', 'Karoq', 'Fabia', 'Scala', 'Octavia', 'Kamiq', 'Kodiaq']
    bmwModels = ['1', '2', '3', '4', '5', '6', '7', '8', 'X1', 'X2', 'Z4', 'X3', 'X4']
    citroenModels = ['C3', 'C4', 'C4 X', 'C5 Aircross', 'C5 X']
    daciaModels = ['Duster', 'Jogger', 'Sandero', 'Spring', 'Cargo']
    fiatModels = ['500', '500C', '500X', 'Doblo', 'Fiorino', 'Panda', 'Panda Van', 'Tipo']
    opelModels = ['Astra', 'Combo', 'Corsa', 'Crossland X', 'Grandland X', 'Insignia', 'Mokka']

    if carBrand == 'Mercedes':
        model = random.choice(mercedesModels)
    elif carBrand == 'Audi':
        model = random.choice(audiModels)
    elif carBrand == 'Skoda':
        model = random.choice(skodaModels)
    elif carBrand == 'BMW':
        model = random.choice(bmwModels)
    elif carBrand == 'Citroen':
        model = random.choice(citroenModels)
    elif carBrand == 'Dacia':
        model = random.choice(daciaModels)
    elif carBrand == 'Fiat':
        model = random.choice(fiatModels)
    else:
        model = random.choice(opelModels)
    
    return model

def CarGenerateProductionYear():
    first_date = datetime.date(2000, 1, 1)
    second_date = datetime.date(2023, 3, 21)
    num_days_between = (second_date - first_date).days
    rand_days = random.randint(1, num_days_between)

    production_year = first_date + datetime.timedelta(days = rand_days)

    return production_year

def CarGenerateCarType():
    car_types_list = ['H', 'M', 'L']
    car_type = random.choice(car_types_list)

    return car_type


def CarDataGenerator():
    records_number = 3
    data = []
    data_licence_plate = []

    for i in range(records_number):
        license_plate = CarGenerateLicensePlate()
        brand = CarGenerateBrand()
        model = CarGenerateModel(brand)
        production_year = CarGenerateProductionYear()
        car_type = CarGenerateCarType()

        record = f"{license_plate}|{brand}|{model}|{production_year}|{car_type}"
        data.append(record)

        record_licence_plate = f"{license_plate}"
        data_licence_plate.append(record_licence_plate)

    return data, data_licence_plate

"""
#! CAR FILES
with open('car_data.bulk', 'w') as f:
    f.truncate()
    for record in data:
        f.write(record + '\n')
    f.close()

with open('licence_plates.txt', 'w') as f:
    f.truncate()
    for record in data_licence_plate:
        f.write(record + '\n')
    f.close()
"""

car_data, licence_plate_data = CarDataGenerator()

dates_car_occupancy_from = []
dates_car_occupancy_to = []
dates_car_reservation_from = []
dates_car_reservation_to = []


for i in range(len(licence_plate_data)):
    #* random dates list
    dates = []
    beggining_date = datetime.date(2000, 1, 1)
    last_date = datetime.date(2021, 1, 1)
    number_of_dates = int(random.randint(2, 5) * 2)

    for i in range(number_of_dates):
        first_date = beggining_date
        second_date = last_date
        num_days_between = (second_date - first_date).days
        rand_days = random.randint(1, num_days_between)

        random_date = first_date + datetime.timedelta(days = rand_days)
        if i != number_of_dates - 1:
            dates.append(random_date)
        else:
            dates.append(last_date)

    #* Sorted random dates list
    sorted_dates = sorted(dates)


    #* Date from occupancy
    occupancy_date_from_list_single_car = []
    #* Date from occupancy
    occupancy_date_to_list_single_car = []

    for i in range(number_of_dates):
        if i % 2 == 0:
            occupancy_date_from_list_single_car.append(sorted_dates[i])
        else:
            occupancy_date_to_list_single_car.append(sorted_dates[i])
    
    #! APPENDING all OCCUPANCY DATES
    dates_car_occupancy_from.append(occupancy_date_from_list_single_car)
    dates_car_occupancy_to.append(occupancy_date_to_list_single_car)

    for i in range(int(number_of_dates / 2)):
        print(str(i) + ' ' + str(occupancy_date_from_list_single_car[i]) + ' - ' + str(occupancy_date_to_list_single_car[i]))


    print('$$$$$$$$$$$$$$$$$$$$$$$$$')
    #* Date from reservation
    reservation_date_from_list = occupancy_date_to_list_single_car[0:-1]
    #* Date to reservation
    reservation_date_to_list = occupancy_date_from_list_single_car[1:]

    #! Appending ALL RESERVATIONS DATES
    dates_car_reservation_from.append(reservation_date_from_list)
    dates_car_reservation_to.append(reservation_date_to_list)
    
    for i in range(int(number_of_dates / 2 - 1)):
        print(str(reservation_date_from_list[i]) + ' - ' + str(reservation_date_to_list[i]))
    print('---------------------------')

print(dates_car_reservation_from)